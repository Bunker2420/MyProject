document.addEventListener("DOMContentLoaded", () => {
  let cart = [];

  // Function to update cart quantity display
  function updateCartQuantity() {
      let cartQuantity = cart.reduce((total, item) => total + item.quantity, 0);
      document.getElementById('cart-quantity').innerText = cartQuantity;
  }

  // Function to render products
  function renderProducts() {
      if (!Array.isArray(products) || products.length === 0) {
          console.error("Products data is not loaded or is empty.");
          document.querySelector('.products-grid').innerText = "No products available.";
          return;
      }

      let html = '';
      products.forEach(product => {
          html += `
          <div class="product-container">
              <div class="product-image-container"><img class="product-image" src="${product.image}"></div>
              <div class="product-name limit-text-to-2-lines">${product.name}</div>
              <div class="product-rating-container">
                  <img class="product-rating-stars" src="images/ratings/rating-${product.rating.stars * 10}.png">
                  <div class="product-rating-count link-primary">${product.rating.count}</div>
              </div>
              <div class="product-price">&#x20b9;${product.price}</div>
              <div class="product-quantity-container">
                  <select>${Array.from({ length: 10 }, (_, i) => `<option value="${i + 1}">${i + 1}</option>`).join('')}</select>
              </div>
              <div class="product-spacer"></div>
              <button class="add-to-cart-button button-primary add-to-cart" data-product-id="${product.id}">Add to Cart</button>
          </div>`;
      });
      document.querySelector('.products-grid').innerHTML = html;

      // Attach click listeners to all add-to-cart buttons
      document.querySelectorAll('.add-to-cart').forEach(button => {
          button.addEventListener('click', () => {
              const productId = button.getAttribute('data-product-id');
              let matchingItem = cart.find(item => item.productId === productId);

              if (matchingItem) {
                  matchingItem.quantity += 1;
              } else {
                  cart.push({ productId, quantity: 1 });
              }

              updateCartQuantity();
          });
      });
  }

  // Render products on page load
  renderProducts();
  updateCartQuantity();
});